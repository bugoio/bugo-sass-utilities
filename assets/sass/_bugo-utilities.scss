@debug "Loading Bugo Sass Utilities";
@import "vendors/mathsass/math";
@import "vendors/modularscale/modularscale";

@import "functions";
@import "mixins";
@import "helpers";
@import "wcag";

/**
 *
 * Hugo Commands
 *
 * This section can be evaluated by Hugo at build. Always provide a default.
 * Hugo can only process the commands in this file. All imported files are ignored
 * due to a system limitation.
 **/

 /* Breakpoints */
$breakpoints: (
    xs: {{ .Site.Params.breakpoints.xs.bp | default "0" }},
    sm: {{ .Site.Params.breakpoints.sm.bp | default "576px" }},
    md: {{ .Site.Params.breakpoints.md.bp | default "768px" }},
    lg: {{ .Site.Params.breakpoints.lg.bp | default "992px" }},
    xl: {{ .Site.Params.breakpoints.xl.bp | default "1200px" }},
    xxl: {{ .Site.Params.breakpoints.xxl.bp | default "1400px" }},
    xxxl: {{ .Site.Params.breakpoints.xxxl.bp | default "2200px" }}
) !default;

$container-max-widths: (
    xs: {{ .Site.Params.breakpoints.xs.mw | default "none" }},
    sm: {{ .Site.Params.breakpoints.sm.mw | default "576px" }},
    md: {{ .Site.Params.breakpoints.md.mw | default "768px" }},
    lg: {{ .Site.Params.breakpoints.lg.mw | default "992px" }},
    xl: {{ .Site.Params.breakpoints.xl.mw | default "1200px" }},
    xxl: {{ .Site.Params.breakpoints.xxl.mw | default "1400px" }},
    xxxl: {{ .Site.Params.breakpoints.xxxl.mw | default "2200px" }}
) !default;

$widths: 20,25,33,50,66,75,90,100;

/**
 * SPACING CLASSES
 **/

$spacing-ratios: (
    0: 0,
    1: 1,
    2: 1.25,
    3: 1.5,
    4: 1.75,
    5: 2,
    6: 2.25
);

.p-none{
  padding: 0 !important;
}

.px-none {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.py-none {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.pt-none {
  padding-top: 0 !important;
}

.pb-none {
  padding-bottom: 0 !important;
}

.m-none{
  margin: 0 !important;
}

.mx-none {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

.my-none {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.mt-none {
  margin-top: 0 !important;
}

.mb-none {
  margin-bottom: 0 !important;
}

@each $key, $mod in $spacing-ratios {

  .p-#{$key} {
    @include ms-respond(padding,$mod);
  }

  .pt-#{$key} {
    @include ms-respond(padding-top,$mod);
  }

  .pr-#{$key} {
    @include ms-respond(padding-right,$mod);
  }

  .pb-#{$key} {
    @include ms-respond(padding-bottom,$mod);
  }

  .pl-#{$key} {
    @include ms-respond(padding-left,$mod);
  }

  .px-#{$key} {
    @include ms-respond(padding-left,$mod,null,true);
    @include ms-respond(padding-right,$mod,null,true);
  }

  .py-#{$key} {
    @include ms-respond(padding-top,$mod,null,true);
    @include ms-respond(padding-bottom,$mod,null,true);
  }

  .m-#{$key} {
    @include ms-respond(margin,$mod);
  }

  .mt-#{$key} {
    @include ms-respond(margin-top,$mod);
  }

  .mr-#{$key} {
    @include ms-respond(margin-right,$mod);
  }

  .mb-#{$key} {
    @include ms-respond(margin-bottom,$mod);
  }

  .ml-#{$key} {
    @include ms-respond(margin-left,$mod);
  }

  .mx-#{$key} {
    @include ms-respond(margin-left,$mod,null,true);
    @include ms-respond(margin-right,$mod,null,true);
  }

  .my-#{$key} {
    @include ms-respond(margin-top,$mod,null,true);
    @include ms-respond(margin-bottom,$mod,null,true);
  }

}


/**
 * BREAKPOINT DIPLAY HELPERS
 **/

 .dnone {
    display: none !important;
  }

  .dblock {
    display: block !important;
  }

  .dflex {
    display: flex !important;
  }

  .dgrid {
    display: grid !important;
  }

  .dinline {
    display: inline !important;
  }

  @each $key, $bp in $breakpoints {
   .#{$key}-dnone{
       @include respond-to($key){
           display: none !important;
       }
   }

   .#{$key}-dblock{
       @include respond-to($key){
           display: block !important;
       }
   }

   .#{$key}-dflex{
       @include respond-to($key){
           display: flex !important;
       }
   }

   .#{$key}-dgrid{
       @include respond-to($key){
           display: grid !important;
       }
   }

   .#{$key}-dinline{
       @include respond-to($key){
           display: inline !important;
       }
   }
  }

  /**
   * BREAKPOINT FLEX HELPERS
   **/

   .flex-wrap {
     flex-wrap: wrap !important;
   }

   .flex-nowrap {
    flex-wrap: nowrap !important;
   }

   .space-between {
     justify-content: space-between;
   }

   .justify-center {
     justify-content: center;
   }

   .justify-start {
     justify-content: flex-start;
   }

   .justify-end {
     justify-content: flex-end;
   }

   .justify-between {
     justify-content: space-between;
   }

   .align-top {
     align-items: flex-start;
   }

  @each $w in $widths {
        .flex-#{$w} {
            flex-basis: $w + 0% !important;
        }
   }

  /**
   * BREAKPOINT WIDTH HELPERS
   **/

   @each $w in $widths {
    .w-#{$w} {
        width:  $w + 0%;
    }
    @each $key, $bp in $breakpoints {
        @include respond-to($key){
            .w-#{$key}-#{$w}{
                width: $w + 0%;
                @each $hkey, $hbp in $breakpoints {
                    &[class*=#{$hkey}-#{$w}] {
                        width: $w + 0%;
                    }
                }
            }
        }
   }

}

   /**
   * BREAKPOINT MAX-WIDTH HELPERS
   **/

   @each $w in $widths {
    .maxwidth-#{$w} {
        max-width:  $w + 0% !important;
    }
    @each $key, $bp in $breakpoints {
        .maxwidth-#{$key}-#{$w} {
            @include respond-to($key){
                max-width: $w + 0% !important;
            }
        }
   }
}



/**
 *
 * Modular Scale using the global breakpoints
 *
 * https://www.modularscale.com
 * https://github.com/modularscale/modularscale-sass
 *
 **/

 $modularscale: (
    {{ .Site.Params.breakpoints.xs.bp }}:(
        base: {{ .Site.Params.breakpoints.xs.base }},
        ratio:  {{ .Site.Params.breakpoints.xs.ratio }}
    ),
    {{ .Site.Params.breakpoints.sm.bp }}:(
        base: {{ .Site.Params.breakpoints.sm.base }},
        ratio:  {{ .Site.Params.breakpoints.sm.ratio }}
    ),
    {{ .Site.Params.breakpoints.md.bp }}:(
        base: {{ .Site.Params.breakpoints.md.base }},
        ratio:  {{ .Site.Params.breakpoints.md.ratio }}
    ),
    {{ .Site.Params.breakpoints.lg.bp }}:(
        base: {{ .Site.Params.breakpoints.lg.base }},
        ratio:  {{ .Site.Params.breakpoints.lg.ratio }}
    ),
    {{ .Site.Params.breakpoints.xl.bp }}:(
        base: {{ .Site.Params.breakpoints.xl.base }},
        ratio:  {{ .Site.Params.breakpoints.xl.ratio }}
    ),
    {{ .Site.Params.breakpoints.xxl.bp }}:(
        base: {{ .Site.Params.breakpoints.xxl.base }},
        ratio:  {{ .Site.Params.breakpoints.xxl.ratio }}
    ),
    {{ .Site.Params.breakpoints.xxxl.bp }}:(
        base: {{ .Site.Params.breakpoints.xxxl.base }},
        ratio:  {{ .Site.Params.breakpoints.xxxl.ratio }}
    ),
   );

/**
 *
 * Theme Color Variables
 * Assigns global colors variables for use elsewhere.
 *
 **/

$primary:       {{ .Site.Params.themeColors.primary | default "red" }};
$secondary:     {{ .Site.Params.themeColors.secondary | default "#536F48" }};
$accent1:      {{ .Site.Params.themeColors.accent1 | default "#FFDE2F" }};
$accent2:      {{ .Site.Params.themeColors.accent2 | default "#5F336A" }};
$light:         {{ .Site.Params.themeColors.light | default "#FFF5E7" }};
$dark:          {{ .Site.Params.themeColors.dark | default "#5B5551" }};
$white:         {{ .Site.Params.themeColors.white | default "#FFFCF6" }};
$black:         {{ .Site.Params.themeColors.black | default "#252524" }};
$success:       {{ .Site.Params.themeColors.success | default "#28a745" }};
$info:          {{ .Site.Params.themeColors.info | default "#17a2b8" }};
$warning:       {{ .Site.Params.themeColors.warning | default "#ffc107" }};
$danger:        {{ .Site.Params.themeColors.danger | default "#dc3545" }};


@import "colors";

/**
*
* Generate theme color mixes
* returns a class for use with block level eleemnts
*
**/

{{ range $index, $mix := .Site.Data.styles.color_mixes }}
  @include color-mixes( {{ $mix.name | anchorize }}, {{ $mix.text_color | anchorize }}, {{ $mix.background_color | anchorize }}, {{ $mix.heading_color | anchorize }} );
{{ end }}

@import "bugo-global-variables";
@import "custom";